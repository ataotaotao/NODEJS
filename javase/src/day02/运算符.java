package day02;

public class 运算符 {
	
}

/*
 * 七种运算符
 * 	1. 算数运算符
 *		+ - * / % 
 * 		int与jin做运算得到的仍旧是int型
 * 		因此1/2 得到的是int型，而结果是0.5，故自动取整。
 * 	2. 自增自减
 * 		++  --
 * 		++ -- 的位置问题
 * 		++ 在前，先++ 再其他操作
 * 		++ 灾后，先其他操作 再++
 *	3. 赋值运算符
 *		=  += -= *= /= %= 
 *		在前面
 *		short s = 1;
 *		int s1 = s+1;	此处的s1 表示的是int，混合运算
 *		
 *		注意：+= 这些运算不改变类型。
 *		short s2 = s +=3;
 *	4. 字符串连接符
 *		+ 只有+两边都是数字时，才做加法运算，否则连接。
 *
 *	5. 比较运算符
 *		> < >= <= == != 没有 ===
 *		得到的结果是boolean值。
 *	
 *	6. 逻辑运算符
 *		& | !  ^  他们应该是位运算符，是一种特殊的算术运算
 *
 *		&&  ||
 *		
 *		&运算，将数字化为8位二进制， 都是1取1，否则取0，
 *		|运算，				   都是0取0，否则取1.
 * 		~					 1为0 ， 0 为1 		按位取反
 * 		^					 相同为0，不同为1 	按位异或	
 * 
 * 		在java中都作为逻辑运算符 ， 结果都是bool
 * 		
 * 		例如： a>1&b>3 , 两遍都是bool值。
 * 		& 两边为true，才是true，否则false
 * 		| 两边为false， 才是false，否则为true
 * 		！ true为false ， false 为true
 * 
 * 		&& 短路与   || 短路或
 * 		基本功能和上面的一样。
 * 		不同之处：
 * 			条件1&&条件2 
 * 			当条件1为false的时候，那么&&就不看后面了，就为false
 * 			必须保证上面的表达式为false
 * 			
 * 			使用短路与更好，能够保证结果，而且节省了运行时间
 * 			
 * 			条件1||条件2
 * 			条件1为true，后面就不看了。
 * 	7. 三目运算符。
 * 		boolean表达式?表达式1:表达式2
 * 		当bool表达式结果为true时，执行表达式1，否则执行表达式2
 * 	注意：接收类型	
 * 			例如：char = a1 = a<b?300:"100";	
 * 			也可以直接使用，不用赋值。
 *		三目的变型，嵌套
 *
 *	8. 优先级
 *		最高优先级 		()
 *		最低优先级		=
 *		优先级顺序		!>算数运算>比较运算>&&>||
 *		不知道运算符优先级加()
 * 
 * 
 * 
 * */
